{
  "name": "web-input-material",
  "version": "0.0.330",
  "description": "Reusable material design based input field with support for (richt-)text, code, selections, numbers, dates and so on.",
  "keywords": [
    "form-field",
    "input",
    "number-input",
    "rich-text",
    "text",
    "webcomponent",
    "component"
  ],
  "homepage": "https://torben.website/web-input-material",
  "bugs": {
    "email": "info@torben.website",
    "url": "https://github.com/thaibault/web-input-material/issues"
  },
  "license": "CC-BY-3.0",
  "author": {
    "name": "Torben Sickert",
    "email": "info@torben.website",
    "url": "https://torben.website"
  },
  "files": [
    "components",
    "declarations.d.ts",
    "index.bundle.js",
    "index.d.ts",
    "index.js",
    "type.d.ts"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/thaibault/web-input-material"
  },
  "scripts": {
    "build": "yarn build:types; yarn build:plain; yarn build:bundle:minimal-input; yarn build:bundle:plain",
    "build:bundle": "yarn build:types; yarn build:bundle:plain",
    "build:bundle:plain": "weboptimizer build '{__reference__: \"target:bundle\"}'",
    "build:bundle:minimal-input": "weboptimizer build '{__reference__: [\"target:bundle\", \"target:minimal\", \"target:minimal:input\"]}'",
    "build:bundle:minimal-input:stats": "weboptimizer build --json /tmp/stat.json '{__reference__: [\"target:bundle\", \"target:minimal\", \"target:minimal:input\"]}' && echo 'Results successfully written to \"/tmp/stat.json\".'",
    "build:bundle:stats": "weboptimizer build --json /tmp/stat.json '{__reference__: \"target:bundle\"}' && echo 'Results successfully written to \"/tmp/stat.json\".'",
    "build:plain": "weboptimizer build",
    "build:types": "weboptimizer build:types",
    "check": "yarn check:types; yarn lint",
    "check:types": "weboptimizer check:types",
    "clear": "weboptimizer clear",
    "document": "weboptimizer document",
    "lint": "weboptimizer lint",
    "patch": "for path in patches/*.patch; do target_file_path=\"$(echo \"$path\" | sed --regexp-extended 's/patches\\/([^/]+).patch$/\\1/' | sed 's:\\+:/:g')\"; source_file_path=\"$path\"; echo \"Patch file \\\"$target_file_path\\\" with \\\"$source_file_path\\\".\"; patch --forward --input \"$source_file_path\" --reject-file - \"$target_file_path\"; done; true",
    "prepare": "yarn build",
    "postinstall": "yarn patch || true",
    "postversion": "yarn publish --non-interactive; git push --tags && git push",
    "serve": "weboptimizer serve",
    "serve:minimal": "weboptimizer serve '{__reference__: \"target:minimal\"}'",
    "start": "yarn serve",
    "test": "weboptimizer test '{__reference__: \"target:minimal\"}'",
    "test:browser": "yarn clear && weboptimizer test:browser '{__reference__: \"target:minimal\"}'",
    "test:coverage": "weboptimizer test:coverage '{__reference__: \"target:minimal\"}'",
    "test:coverage:report": "weboptimizer test:coverage:report '{__reference__: \"target:minimal\"}'",
    "update": "yarn version --patch",
    "update:documentation": "documentation-website",
    "watch": "weboptimizer build --watch"
  },
  "runkitExample": "require('@babel/runtime/package.json')\n\nglobalThis.window = globalThis\n\nconst {GenericInput} = require('web-input-material')\n\nGenericInput.component._name",
  "dependencies": {
    "@types/webpack": "https://registry.yarnpkg.com/@favware/skip-dependency/-/skip-dependency-1.1.1.tgz",
    "prop-types": "*",
    "react": "*",
    "react-dom": "*",
    "react-input-material": "*",
    "react-transition-group": "*",
    "web-component-wrapper": "*"
  },
  "devDependencies": {
    "@babel/eslint-parser": "*",
    "@babel/plugin-transform-proto-to-assign": "*",
    "@babel/preset-react": "*",
    "@rmwc/card": "*",
    "@rmwc/checkbox": "*",
    "@rmwc/circular-progress": "*",
    "@rmwc/formfield": "*",
    "@rmwc/icon": "*",
    "@rmwc/icon-button": "*",
    "@rmwc/select": "*",
    "@rmwc/slider": "*",
    "@rmwc/tabs": "*",
    "@rmwc/textfield": "*",
    "@rmwc/theme": "*",
    "@rmwc/tooltip": "*",
    "@rmwc/typography": "*",
    "@tinymce/tinymce-react": "*",
    "@types/ejs": "*",
    "@types/html-minifier": "*",
    "@types/jquery": "*",
    "@types/jsdom": "*",
    "@types/node": "*",
    "@types/react": "*",
    "@types/react-dom": "*",
    "@types/react-transition-group": "*",
    "@types/webpack-env": "*",
    "@typescript-eslint/eslint-plugin": "*",
    "@typescript-eslint/parser": "*",
    "@webcomponents/webcomponentsjs": "*",
    "blob-util": "*",
    "clientnode": "*",
    "documentation-website": "*",
    "eslint": "*",
    "eslint-config-google": "*",
    "eslint-plugin-jsdoc": "*",
    "identity-obj-proxy": "*",
    "jest": "*",
    "jsdoc": "*",
    "material-icons": "*",
    "react-ace": "*",
    "react-generic-dummy": "*",
    "react-useanimations": "*",
    "style-loader": "*",
    "tslib": "*",
    "weboptimizer": "*",
    "webpack-dev-server": "*"
  },
  "peerDependencies": {
    "@babel/runtime": "*",
    "clientnode": "*"
  },
  "peerDependenciesMeta": {
    "@babel/runtime": {
      "optional": true
    }
  },
  "engines": {
    "node": ">=17",
    "npm": ">=7"
  },
  "resolutions": {
    "@types/webpack": "https://registry.yarnpkg.com/@favware/skip-dependency/-/skip-dependency-1.1.1.tgz",
    "colors": "1.4.0"
  },
  "sideEffects": false,
  "documentationWebsite": {
    "tagline": "Do not refactor input fields anymore.<!--deDE:Nie wieder Eingabefelder anpassen.-->",
    "trackingCode": "TODO"
  },
  "webOptimizer": {
    "commandLine": {
      "test": {
        "environments": [
          "jsdom"
        ]
      }
    },
    "generic": {
      "supportedBrowsers": [
        "IE >= 11",
        "last 2 versions",
        "> 5%"
      ]
    },
    "injection": {
      "entry": {
        "__evaluate__": "2 < self.givenCommandLineArguments.length && self.givenCommandLineArguments[2].startsWith('test') ? {testBundle: './test.ts'} : 2 < self.givenCommandLineArguments.length && self.givenCommandLineArguments[2] === 'serve' ? {clientnode: 'clientnode', index: './index'} : {'./components/CircularSpinner': './components/CircularSpinner', './components/FileInput': './components/FileInput', './components/GenericAnimate': './components/GenericAnimate', './components/GenericInput': './components/GenericInput', './components/GenericInputs': './components/GenericInputs', './components/Tabs': ['./components/TabItem', './components/TabBar'], './components/RequireableCheckbox': './components/RequireableCheckbox', './components/SliderInput': './components/SliderInput', index: './index'}"
      },
      "external": {
        "implicit": {
          "pattern": {
            "exclude": {
              "__append__": {
                "__evaluate__": "/(?:^|\\/)((react-input-material)|(web-component-wrapper))(?:$|\\/)/"
              }
            }
          }
        }
      }
    },
    "module": {
      "aliases": {
        "#": "Remove unneeded optional dependencies.",
        "jquery$": false
      },
      "enforceDeduplication": true,
      "html": {
        "options": {
          "sources": {
            "urlFilter": {
              "__evaluate__": "() => false"
            }
          }
        }
      },
      "optimizer": {
        "babelMinify": {
          "#": "To provide a logging output we need to exclude this feature.",
          "__evaluate__": "self.debug || true ? {bundle: null, module: null} : {bundle: {transform: {removeConsole: false}}, module: {removeConsole: false}}"
        }
      }
    },
    "target:bundle": {
      "files": {
        "compose": {
          "javaScript": {
            "__evaluate__": "`${path.resolve(self.path.target.asset.javaScript, '[name].bundle')}.js`"
          }
        }
      },
      "inPlace": {
        "externalLibrary": {
          "dynamic": true,
          "normal": true
        }
      },
      "libraryName": {
        "__evaluate__": "Tools.stringDelimitedToCamelCase(self.name)"
      },
      "module": {
        "preprocessor": {
          "javaScript": {
            "options": {
              "plugins": {
                "__remove__": "@babel/plugin-transform-runtime"
              }
            }
          }
        }
      }
    },
    "target:minimal": {
      "module": {
        "aliases": {
          "#": "Remove unneeded optional dependencies.",
          "@tinymce/tinymce-react$": "react-generic-dummy",
          "#1": "Triggers error in debug mode:",
          "#2": "ace-builds$: false",
          "#3": "@tinymce/tinymce-react$: false",
          "#4": "react-ace$: false",
          "#5": "react-useanimations$: false",
          "#6": "react-useanimations/lib/lock$: false",
          "#7": "react-useanimations/lib/plusToX$: false",
          "ace-builds$": "react-generic-dummy",
          "react-ace$": "react-generic-dummy",
          "react-useanimations$": "react-generic-dummy",
          "react-useanimations/lib/lock$": "react-generic-dummy",
          "react-useanimations/lib/plusToX$": "react-generic-dummy"
        }
      }
    },
    "target:minimal:input": {
      "files": {
        "compose": {
          "javaScript": {
            "__evaluate__": "`${path.resolve(self.path.target.asset.javaScript, '[name].minimal.input-bundle')}.js`"
          }
        }
      },
      "injection": {
        "entry": {
          "__evaluate__": "{'./components/GenericInput': './components/GenericInput'}"
        }
      }
    }
  }
}
